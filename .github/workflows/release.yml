name: Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          python-version: "3.12"
          version: 'latest'

      - name: Install Dependencies
        run: uv sync --group dev --locked

      - name: Create test .env file
        run: |
          cat > .env << EOF
          ASF_HOST=127.0.0.1
          ASF_PORT=1242
          ASF_PASSWORD=
          ASF_PATH=/Api
          enable_rich_traceback=false
          EOF

      - name: Run Tests
        run: uv run poe test
        continue-on-error: true

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          python-version: "3.12"
          version: 'latest'

      - name: Get Version
        id: version
        run: |
          echo "VERSION=$(uv version --short)" >> $GITHUB_OUTPUT
          echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      #- name: Check Version
      #  if: steps.version.outputs.VERSION != steps.version.outputs.TAG_VERSION
      #  run: exit 1

      - name: Build 
        run: uv build

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Upload Release Asset
        run: gh release upload --clobber ${{ steps.version.outputs.TAG_NAME }} dist/*.tar.gz dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      